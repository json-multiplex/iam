syntax = "proto3";
package jsonmultiplex.iam.v0;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service IAM {
  rpc CreateAccount(CreateAccountRequest) returns (Account) {
    option (google.api.http) = {
      post: "/v0/accounts"
      body: "account"
    };
  }

  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v0/users"
    };
  }

  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.http) = {
      get: "/v0/{name=users/*}"
    };
  }

  rpc CreateUser(CreateUserRequest) returns (User) {
    option (google.api.http) = {
      post: "/v0/users"
      body: "user"
    };
  }

  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v0/{name=users/*}"
    };
  }

  rpc CreateSession(CreateSessionRequest) returns (Session) {
    option (google.api.http) = {
      post: "/v0/sessions"
      body: "session"
    };
  }
}

message Account {
  string name = 1;
  google.protobuf.Timestamp create_time = 2;
  google.protobuf.Timestamp update_time = 3;
  google.protobuf.Timestamp delete_time = 4;

  // Write-only field, required only for CreateAccount. Never returned to the
  // client.
  string root_password = 5;
}

message User {
  string name = 1;
  google.protobuf.Timestamp create_time = 2;
  google.protobuf.Timestamp update_time = 3;
  google.protobuf.Timestamp delete_time = 4;

  // Write-only field, required only for CreateUser and optional for UpdateUser.
  // Never returned to the client.
  string password = 6;
}

message Session {
  string name = 1;
  google.protobuf.Timestamp create_time = 2;
  google.protobuf.Timestamp expire_time = 3;
  string account = 4;
  string user = 5;

  // Write-only field, required only for CreateSession. Never returned to the
  // client.
  string password = 6;

  // Read-only field, returned only from CreateSession.
  string token = 7;
}

message CreateAccountRequest {
  Account account = 1;
}

message ListUsersRequest {}

message ListUsersResponse {
  repeated User users = 1;
}

message GetUserRequest {
  string name = 1;
}

message CreateUserRequest {
  User user = 1;
}

message DeleteUserRequest {
  string name = 1;
}

message CreateSessionRequest {
  Session session = 1;
}